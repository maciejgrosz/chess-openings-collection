version: "3.7"

services:
    app:
        build: ./openings-collection
        container_name: app
        ports:
            - "5000:5000"
        environment:
          MONGODB_USERNAME: admin
          MONGODB_PASSWORD: pass
          MONGODB_HOSTNAME: mongodb
          MONGODB_DATABASE: openings
          FLASK_APP: FLASK_APP
          FLASK_DEBUG: "TRUE"
        depends_on:
            - "mongodb"
        networks:
            - "database_network"
    mongodb:
        image: mongo
        container_name: mongodb
        environment:
          MONGODB_INITSCRIPTS_DIR: /docker-entrypoint-initdb.d
          MONGO_INITDB_ROOT_USERNAME: admin
          MONGO_INITDB_ROOT_PASSWORD: pass

        volumes:
          - ./mongodb/scripts:/docker-entrypoint-initdb.d
          - mongodb-vol:/data/db
        networks:
            - "database_network"
        healthcheck:
          test: "echo 'db.runCommand(\"ping\").ok'"
          interval: 5s
          timeout: 5s
          retries: 3
        restart: always
    nginx:
        build:
          context: nginx/.
          dockerfile: Dockerfile
        ports:
          - "8082:80"
        environment:
            BACKEND: app
        depends_on:
          - app
        networks:
          - "database_network"
        command: [ "/bin/sh", "-c","export BACKEND && envsubst '$${BACKEND}' < /etc/nginx/templates/nginx.conf.template > /etc/nginx/nginx.conf && exec nginx -g 'daemon off;'" ]

networks:
    database_network:
      name: database_network
volumes:
  mongodb-vol: